// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// Lesson is an autogenerated mock type for the Lesson type
type Lesson struct {
	mock.Mock
}

// GetDescription provides a mock function with given fields:
func (_m *Lesson) GetDescription() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetIndex provides a mock function with given fields:
func (_m *Lesson) GetIndex() uint16 {
	ret := _m.Called()

	var r0 uint16
	if rf, ok := ret.Get(0).(func() uint16); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint16)
	}

	return r0
}

// GetLessonID provides a mock function with given fields:
func (_m *Lesson) GetLessonID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetSectionID provides a mock function with given fields:
func (_m *Lesson) GetSectionID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetThumbnail provides a mock function with given fields:
func (_m *Lesson) GetThumbnail() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetTimestamps provides a mock function with given fields:
func (_m *Lesson) GetTimestamps() (time.Time, time.Time) {
	ret := _m.Called()

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	var r1 time.Time
	if rf, ok := ret.Get(1).(func() time.Time); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(time.Time)
	}

	return r0, r1
}

// GetTitle provides a mock function with given fields:
func (_m *Lesson) GetTitle() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IsPublished provides a mock function with given fields:
func (_m *Lesson) IsPublished() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Publish provides a mock function with given fields:
func (_m *Lesson) Publish() {
	_m.Called()
}

// SetDescription provides a mock function with given fields: description
func (_m *Lesson) SetDescription(description string) {
	_m.Called(description)
}

// SetIndex provides a mock function with given fields: index
func (_m *Lesson) SetIndex(index uint16) {
	_m.Called(index)
}

// SetLessonID provides a mock function with given fields: lessonID
func (_m *Lesson) SetLessonID(lessonID string) {
	_m.Called(lessonID)
}

// SetSectionID provides a mock function with given fields: sectionID
func (_m *Lesson) SetSectionID(sectionID string) {
	_m.Called(sectionID)
}

// SetThumbnail provides a mock function with given fields: thumbnail
func (_m *Lesson) SetThumbnail(thumbnail string) {
	_m.Called(thumbnail)
}

// SetTitle provides a mock function with given fields: title
func (_m *Lesson) SetTitle(title string) {
	_m.Called(title)
}

// Unpublish provides a mock function with given fields:
func (_m *Lesson) Unpublish() {
	_m.Called()
}
