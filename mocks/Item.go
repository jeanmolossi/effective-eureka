// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/jeanmolossi/effective-eureka/src/core/purchases/domain"
	factory "github.com/jeanmolossi/effective-eureka/src/core/purchases/factory"

	mock "github.com/stretchr/testify/mock"
)

// Item is an autogenerated mock type for the Item type
type Item struct {
	mock.Mock
}

// Build provides a mock function with given fields:
func (_m *Item) Build() (domain.Item, error) {
	ret := _m.Called()

	var r0 domain.Item
	if rf, ok := ret.Get(0).(func() domain.Item); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.Item)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Create provides a mock function with given fields: item
func (_m *Item) Create(item map[string]interface{}) factory.Item {
	ret := _m.Called(item)

	var r0 factory.Item
	if rf, ok := ret.Get(0).(func(map[string]interface{}) factory.Item); ok {
		r0 = rf(item)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(factory.Item)
		}
	}

	return r0
}

// WithBuyer provides a mock function with given fields: item
func (_m *Item) WithBuyer(item map[string]interface{}) factory.Item {
	ret := _m.Called(item)

	var r0 factory.Item
	if rf, ok := ret.Get(0).(func(map[string]interface{}) factory.Item); ok {
		r0 = rf(item)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(factory.Item)
		}
	}

	return r0
}

// WithProduct provides a mock function with given fields: item
func (_m *Item) WithProduct(item map[string]interface{}) factory.Item {
	ret := _m.Called(item)

	var r0 factory.Item
	if rf, ok := ret.Get(0).(func(map[string]interface{}) factory.Item); ok {
		r0 = rf(item)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(factory.Item)
		}
	}

	return r0
}
