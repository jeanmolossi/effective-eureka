// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/jeanmolossi/effective-eureka/src/core/purchases/domain"
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Item is an autogenerated mock type for the Item type
type Item struct {
	mock.Mock
}

// Buyer provides a mock function with given fields:
func (_m *Item) Buyer() domain.Buyer {
	ret := _m.Called()

	var r0 domain.Buyer
	if rf, ok := ret.Get(0).(func() domain.Buyer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.Buyer)
		}
	}

	return r0
}

// Product provides a mock function with given fields:
func (_m *Item) Product() domain.Product {
	ret := _m.Called()

	var r0 domain.Product
	if rf, ok := ret.Get(0).(func() domain.Product); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.Product)
		}
	}

	return r0
}

// Status provides a mock function with given fields:
func (_m *Item) Status() domain.Status {
	ret := _m.Called()

	var r0 domain.Status
	if rf, ok := ret.Get(0).(func() domain.Status); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(domain.Status)
	}

	return r0
}

// Transaction provides a mock function with given fields:
func (_m *Item) Transaction() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// WarranyExpireDate provides a mock function with given fields:
func (_m *Item) WarranyExpireDate() time.Time {
	ret := _m.Called()

	var r0 time.Time
	if rf, ok := ret.Get(0).(func() time.Time); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Time)
	}

	return r0
}
