// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/jeanmolossi/effective-eureka/src/core/lessons/domain"
	mock "github.com/stretchr/testify/mock"
)

// LessonRepository is an autogenerated mock type for the LessonRepository type
type LessonRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: lesson
func (_m *LessonRepository) Create(lesson domain.Lesson) (domain.Lesson, error) {
	ret := _m.Called(lesson)

	var r0 domain.Lesson
	if rf, ok := ret.Get(0).(func(domain.Lesson) domain.Lesson); ok {
		r0 = rf(lesson)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.Lesson)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.Lesson) error); ok {
		r1 = rf(lesson)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Edit provides a mock function with given fields: lessonID, updater
func (_m *LessonRepository) Edit(lessonID string, updater domain.LessonUpdater) (domain.Lesson, error) {
	ret := _m.Called(lessonID, updater)

	var r0 domain.Lesson
	if rf, ok := ret.Get(0).(func(string, domain.LessonUpdater) domain.Lesson); ok {
		r0 = rf(lessonID, updater)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.Lesson)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, domain.LessonUpdater) error); ok {
		r1 = rf(lessonID, updater)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLesson provides a mock function with given fields: lessonID
func (_m *LessonRepository) GetLesson(lessonID string) (domain.Lesson, error) {
	ret := _m.Called(lessonID)

	var r0 domain.Lesson
	if rf, ok := ret.Get(0).(func(string) domain.Lesson); ok {
		r0 = rf(lessonID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.Lesson)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(lessonID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetLessonsFromSection provides a mock function with given fields: sectionID
func (_m *LessonRepository) GetLessonsFromSection(sectionID string) ([]domain.Lesson, error) {
	ret := _m.Called(sectionID)

	var r0 []domain.Lesson
	if rf, ok := ret.Get(0).(func(string) []domain.Lesson); ok {
		r0 = rf(sectionID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Lesson)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(sectionID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IssetSection provides a mock function with given fields: sectionID
func (_m *LessonRepository) IssetSection(sectionID string) bool {
	ret := _m.Called(sectionID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(sectionID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
