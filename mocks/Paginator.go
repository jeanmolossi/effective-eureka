// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	gorm "gorm.io/gorm"
)

// Paginator is an autogenerated mock type for the Paginator type
type Paginator struct {
	mock.Mock
}

// GetItemsPerPage provides a mock function with given fields:
func (_m *Paginator) GetItemsPerPage() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetOffset provides a mock function with given fields:
func (_m *Paginator) GetOffset() uint16 {
	ret := _m.Called()

	var r0 uint16
	if rf, ok := ret.Get(0).(func() uint16); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint16)
	}

	return r0
}

// Page provides a mock function with given fields:
func (_m *Paginator) Page() uint16 {
	ret := _m.Called()

	var r0 uint16
	if rf, ok := ret.Get(0).(func() uint16); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint16)
	}

	return r0
}

// Paginate provides a mock function with given fields: db
func (_m *Paginator) Paginate(db *gorm.DB) *gorm.DB {
	ret := _m.Called(db)

	var r0 *gorm.DB
	if rf, ok := ret.Get(0).(func(*gorm.DB) *gorm.DB); ok {
		r0 = rf(db)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*gorm.DB)
		}
	}

	return r0
}

// SetBaseURL provides a mock function with given fields: baseURL
func (_m *Paginator) SetBaseURL(baseURL string) {
	_m.Called(baseURL)
}

// SetItemsPerPage provides a mock function with given fields: itemsPerPage
func (_m *Paginator) SetItemsPerPage(itemsPerPage int) {
	_m.Called(itemsPerPage)
}

// SetPage provides a mock function with given fields: page
func (_m *Paginator) SetPage(page uint16) {
	_m.Called(page)
}

// ShouldPaginate provides a mock function with given fields:
func (_m *Paginator) ShouldPaginate() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
