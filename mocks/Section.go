// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// Section is an autogenerated mock type for the Section type
type Section struct {
	mock.Mock
}

// GetCourseID provides a mock function with given fields:
func (_m *Section) GetCourseID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetIndex provides a mock function with given fields:
func (_m *Section) GetIndex() uint16 {
	ret := _m.Called()

	var r0 uint16
	if rf, ok := ret.Get(0).(func() uint16); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint16)
	}

	return r0
}

// GetModuleID provides a mock function with given fields:
func (_m *Section) GetModuleID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetSectionID provides a mock function with given fields:
func (_m *Section) GetSectionID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetTimestamps provides a mock function with given fields:
func (_m *Section) GetTimestamps() (*time.Time, *time.Time) {
	ret := _m.Called()

	var r0 *time.Time
	if rf, ok := ret.Get(0).(func() *time.Time); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*time.Time)
		}
	}

	var r1 *time.Time
	if rf, ok := ret.Get(1).(func() *time.Time); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*time.Time)
		}
	}

	return r0, r1
}

// GetTitle provides a mock function with given fields:
func (_m *Section) GetTitle() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IsPublished provides a mock function with given fields:
func (_m *Section) IsPublished() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Publish provides a mock function with given fields:
func (_m *Section) Publish() {
	_m.Called()
}

// SetCourseID provides a mock function with given fields: courseID
func (_m *Section) SetCourseID(courseID string) {
	_m.Called(courseID)
}

// SetIndex provides a mock function with given fields: index
func (_m *Section) SetIndex(index uint16) {
	_m.Called(index)
}

// SetModuleID provides a mock function with given fields: moduleID
func (_m *Section) SetModuleID(moduleID string) {
	_m.Called(moduleID)
}

// SetSectionID provides a mock function with given fields: sectionID
func (_m *Section) SetSectionID(sectionID string) {
	_m.Called(sectionID)
}

// SetTitle provides a mock function with given fields: title
func (_m *Section) SetTitle(title string) {
	_m.Called(title)
}

// Unpublish provides a mock function with given fields:
func (_m *Section) Unpublish() {
	_m.Called()
}
