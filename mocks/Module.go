// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/jeanmolossi/effective-eureka/src/core/modules/domain"
	factory "github.com/jeanmolossi/effective-eureka/src/core/modules/factory"

	mock "github.com/stretchr/testify/mock"
)

// Module is an autogenerated mock type for the Module type
type Module struct {
	mock.Mock
}

// Build provides a mock function with given fields:
func (_m *Module) Build() domain.Module {
	ret := _m.Called()

	var r0 domain.Module
	if rf, ok := ret.Get(0).(func() domain.Module); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.Module)
		}
	}

	return r0
}

// CreateModule provides a mock function with given fields: courseID, title, thumb, desc, published
func (_m *Module) CreateModule(courseID string, title string, thumb string, desc string, published bool) factory.Module {
	ret := _m.Called(courseID, title, thumb, desc, published)

	var r0 factory.Module
	if rf, ok := ret.Get(0).(func(string, string, string, string, bool) factory.Module); ok {
		r0 = rf(courseID, title, thumb, desc, published)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(factory.Module)
		}
	}

	return r0
}

// WithID provides a mock function with given fields: id
func (_m *Module) WithID(id string) factory.Module {
	ret := _m.Called(id)

	var r0 factory.Module
	if rf, ok := ret.Get(0).(func(string) factory.Module); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(factory.Module)
		}
	}

	return r0
}
