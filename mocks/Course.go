// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Course is an autogenerated mock type for the Course type
type Course struct {
	mock.Mock
}

// GetCourseDesc provides a mock function with given fields:
func (_m *Course) GetCourseDesc() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetCourseID provides a mock function with given fields:
func (_m *Course) GetCourseID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetCourseThumb provides a mock function with given fields:
func (_m *Course) GetCourseThumb() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetCourseTitle provides a mock function with given fields:
func (_m *Course) GetCourseTitle() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// IsCoursePublished provides a mock function with given fields:
func (_m *Course) IsCoursePublished() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// PublishCourse provides a mock function with given fields:
func (_m *Course) PublishCourse() {
	_m.Called()
}

// SetCourseDesc provides a mock function with given fields: courseDesc
func (_m *Course) SetCourseDesc(courseDesc string) {
	_m.Called(courseDesc)
}

// SetCourseID provides a mock function with given fields: courseID
func (_m *Course) SetCourseID(courseID string) {
	_m.Called(courseID)
}

// SetCourseThumb provides a mock function with given fields: courseThumb
func (_m *Course) SetCourseThumb(courseThumb string) {
	_m.Called(courseThumb)
}

// SetCourseTitle provides a mock function with given fields: courseTitle
func (_m *Course) SetCourseTitle(courseTitle string) {
	_m.Called(courseTitle)
}

// UnpublishCourse provides a mock function with given fields:
func (_m *Course) UnpublishCourse() {
	_m.Called()
}
