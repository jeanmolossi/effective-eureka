// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/jeanmolossi/effective-eureka/src/core/courses/domain"
	factory "github.com/jeanmolossi/effective-eureka/src/core/courses/factory"

	mock "github.com/stretchr/testify/mock"
)

// Course is an autogenerated mock type for the Course type
type Course struct {
	mock.Mock
}

// Build provides a mock function with given fields:
func (_m *Course) Build() domain.Course {
	ret := _m.Called()

	var r0 domain.Course
	if rf, ok := ret.Get(0).(func() domain.Course); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(domain.Course)
		}
	}

	return r0
}

// CreateCourse provides a mock function with given fields: title, thumb, description, published
func (_m *Course) CreateCourse(title string, thumb string, description string, published bool) factory.Course {
	ret := _m.Called(title, thumb, description, published)

	var r0 factory.Course
	if rf, ok := ret.Get(0).(func(string, string, string, bool) factory.Course); ok {
		r0 = rf(title, thumb, description, published)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(factory.Course)
		}
	}

	return r0
}

// WithID provides a mock function with given fields: id
func (_m *Course) WithID(id string) factory.Course {
	ret := _m.Called(id)

	var r0 factory.Course
	if rf, ok := ret.Get(0).(func(string) factory.Course); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(factory.Course)
		}
	}

	return r0
}
