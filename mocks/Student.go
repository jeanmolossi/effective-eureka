// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Student is an autogenerated mock type for the Student type
type Student struct {
	mock.Mock
}

// GetStudentEmail provides a mock function with given fields:
func (_m *Student) GetStudentEmail() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetStudentID provides a mock function with given fields:
func (_m *Student) GetStudentID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetStudentPassword provides a mock function with given fields:
func (_m *Student) GetStudentPassword() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// HashPassword provides a mock function with given fields:
func (_m *Student) HashPassword() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IsValidPassword provides a mock function with given fields: _a0
func (_m *Student) IsValidPassword(_a0 string) bool {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// SetPassword provides a mock function with given fields: _a0
func (_m *Student) SetPassword(_a0 string) {
	_m.Called(_a0)
}

// SetStudentEmail provides a mock function with given fields: _a0
func (_m *Student) SetStudentEmail(_a0 string) {
	_m.Called(_a0)
}

// SetStudentID provides a mock function with given fields: _a0
func (_m *Student) SetStudentID(_a0 string) {
	_m.Called(_a0)
}
